# hosts/hypervisor/default.nix
# Physical hypervisor host configuration
# Manages: ZFS storage, Tailscale, MicroVM lifecycle
{ config, pkgs, ... }:
{
  imports = [
    # Generated by: nixos-generate-config
    # Contains: boot.loader, fileSystems, hardware config
    ./hardware-configuration.nix

    # Network bridges, NAT, firewall
    ./network.nix

    # EBS volume management with ZFS
    ../../modules/ebs-volume
  ];

  # Nix settings
  nix.settings.experimental-features = [
    "nix-command"
    "flakes"
  ];

  nix.trustedUsers = [
    "root"
    "@wheel"
  ];

  nix.gc = {
    automatic = true;
    dates = "weekly";
    options = "--delete-older-than 7d";
  };

  # Allow unfree packages
  nixpkgs.config.allowUnfree = true;

  networking.hostName = "hypervisor";

  # ZFS support
  boot.supportedFilesystems = [ "zfs" ];
  boot.zfs.forceImportRoot = false;

  # Required for ZFS (random 8-char hex string)
  # Generate with: head -c 4 /dev/urandom | od -A none -t x4 | tr -d ' '
  networking.hostId = "12345678";  # TODO: Generate unique ID

  # Tailscale for remote access and subnet routing
  services.tailscale.enable = true;

  # Environment configuration
  environment.variables = {
    EDITOR = "nvim";
  };

  environment.shellAliases = {
    "ccode" = "npx -y @anthropic-ai/claude-code --dangerously-skip-permissions";
  };

  # Program configurations
  programs.neovim.enable = true;
  programs.neovim.defaultEditor = true;
  programs.direnv.enable = true;

  # Basic system tools
  environment.systemPackages = with pkgs; [
    vim
    git
    htop
    tmux
    curl
    wget
    nodejs
    claude-code
    gh  # GitHub CLI for Flux bootstrap
  ];

  # SSH with key-only auth
  services.openssh = {
    enable = true;
    settings = {
      PermitRootLogin = "prohibit-password";
      PasswordAuthentication = false;
      KbdInteractiveAuthentication = false;
    };
  };

  # Sudo configuration
  security.sudo.wheelNeedsPassword = false;
  security.sudo.extraConfig = ''
    robertwendt ALL=(ALL) NOPASSWD:ALL
  '';

  # Create an admin user (customize as needed)
  users.users.admin = {
    isNormalUser = true;
    extraGroups = [ "wheel" "networkmanager" ];
    # Add your SSH public key here:
    # openssh.authorizedKeys.keys = [ "ssh-ed25519 AAAA..." ];
  };

  # Additional user: robertwendt
  users.users.robertwendt = {
    isNormalUser = true;
    extraGroups = [ "wheel" "podman" ];
    openssh.authorizedKeys.keys = [
      "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHJNEMM9i3WgPeA5dDmU7KMWTCcwLLi4EWfX8CKXuK7s robertwendt@Roberts-Laptop.local"
    ];
  };

  # EBS volume management with ZFS
  services.ebsVolumes = {
    enable = true;
    volumes."microvm-storage" = {
      mountPoint = "/var/lib/microvms";
      sizeGiB = 100;
      poolName = "microvm-pool";
      dataset = "storage";
      volumeType = "gp3";
      throughput = 125;  # MiB/s
      iops = 3000;
      encrypted = true;
      mountOptions = [ "nofail" "defaults" ];
      mountOwner = "root";
      mountGroup = "root";
      mountDirMode = "0755";
      device = "/dev/sdf";
    };
  };

  # NixOS version (don't change after initial install)
  system.stateVersion = "24.05";
}
