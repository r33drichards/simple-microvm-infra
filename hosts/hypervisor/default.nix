# hosts/hypervisor/default.nix
# Physical hypervisor host configuration
# Manages: MicroVM storage, Tailscale, MicroVM lifecycle
{ config, pkgs, ... }:
{
  imports = [
    # Generated by: nixos-generate-config
    # Contains: boot.loader, fileSystems, hardware config
    ./hardware-configuration.nix

    # Network bridges, NAT, firewall
    ./network.nix
  ];

  # Nix settings
  nix.settings.experimental-features = [
    "nix-command"
    "flakes"
  ];

  nix.settings.trusted-users = [
    "root"
    "@wheel"
  ];

  nix.gc = {
    automatic = true;
    dates = "weekly";
    options = "--delete-older-than 7d";
  };

  # Allow unfree packages
  nixpkgs.config.allowUnfree = true;

  networking.hostName = "hypervisor";

  # Tailscale for remote access and subnet routing
  services.tailscale.enable = true;

  # Environment configuration
  environment.variables = {
    EDITOR = "nvim";
  };

  environment.shellAliases = {
    "ccode" = "npx -y @anthropic-ai/claude-code --dangerously-skip-permissions";
  };

  # Program configurations
  programs.neovim.enable = true;
  programs.neovim.defaultEditor = true;
  programs.direnv.enable = true;

  # Basic system tools
  environment.systemPackages = with pkgs; [
    vim
    git
    htop
    tmux
    curl
    wget
    nodejs
  ];

  # SSH with key-only auth
  services.openssh = {
    enable = true;
    settings = {
      PermitRootLogin = "prohibit-password";
      PasswordAuthentication = false;
      KbdInteractiveAuthentication = false;
    };
  };

  # Sudo configuration
  security.sudo.wheelNeedsPassword = false;
  security.sudo.extraConfig = ''
    robertwendt ALL=(ALL) NOPASSWD:ALL
  '';

  # Create an admin user (customize as needed)
  users.users.admin = {
    isNormalUser = true;
    extraGroups = [ "wheel" "networkmanager" ];
    # Add your SSH public key here:
    # openssh.authorizedKeys.keys = [ "ssh-ed25519 AAAA..." ];
  };

  # Additional user: robertwendt
  users.users.robertwendt = {
    isNormalUser = true;
    extraGroups = [ "wheel" ];
    openssh.authorizedKeys.keys = [
      "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHJNEMM9i3WgPeA5dDmU7KMWTCcwLLi4EWfX8CKXuK7s robertwendt@Roberts-Laptop.local"
    ];
  };

  # Create MicroVM storage directory on root filesystem
  # This is simpler than ZFS but uses the root volume for storage
  systemd.tmpfiles.rules = [
    "d /var/lib/microvms 0755 root root -"
    "d /var/lib/microvms/vm1 0755 root root -"
    "d /var/lib/microvms/vm2 0755 root root -"
    "d /var/lib/microvms/vm3 0755 root root -"
    "d /var/lib/microvms/vm4 0755 root root -"
  ];

  # NixOS version (don't change after initial install)
  system.stateVersion = "24.05";
}
